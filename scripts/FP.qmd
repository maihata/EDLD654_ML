---
title: "EDLD654 ML Project"
author: "Maiko Hata"
format:
  revealjs:
    theme: serif
    footer: "EDLD654 Final Project - Maiko Hata"
    width: 960
    height: 700
    margin: 0.08
editor: visual
---

```{r}
### Resource Links ### 
# published at https://maihata.quarto.pub/edld654-ml-project/ 
# "Beautiful presentations with R and Quarto" https://youtu.be/01KifhHDkFk?si=2axQMI_c0Tu9_Z5P 
# quarto themes  https://quarto.org/docs/presentations/revealjs/themes.html
# theme - serif or simple
# ggplot themes https://ggplot2.tidyverse.org/reference/ggtheme.html 
# R graph gallery with pretty colors https://r-graph-gallery.com/ 
# color themes I like https://www.colorhexa.com/404080 
# Intro to linear regression https://www.youtube.com/watch?v=zPG4NjIkCjc 
```

```{r}

library(dplyr)
library(finalfit)
library(lubridate)
library(reticulate)
library(finalfit)
library(stringr)
library(recipes)
library(ggplot2)
library(tidyverse)
library(gt)
library(caret)
library(MASS)
library(AppliedPredictiveModeling)
```

## Research problem
<style>
.reveal .slides { font-size:80%; }
</style>

**The big question**: How can I design and apply Machine Learning (ML) models without reinforcing existing biases?

![](images/Asian_student_turned_white.png){fig-align="center"}

## Research question

-   **Goal**: Predict Autism Spectrum Quotient (AQ-10) screener scores from demographic information.

-   **Potential benefit**: Understanding factors relating to scores can potentially support more focused outreach.

-   **Ethical & equity considerations**: As an Autistic researcher and Early Intervention (EI) specialist, I want to understand how predictive models are created, what their limitations are, and the ethical considerations.

```{r}
### SCRIPT ###
# Machine learning is a topic that holds many layers and emotions. There are clear benefits, such as identifying patterns in large datasets that improve efficiency and flow across fields. However, the use of big data without consent from the individuals it represents raises serious ethical concerns, including the misuse of sensitive information and the reinforcement of existing biases. For example, an Asian MIT student recently received a “White” version of her image when she requested a professional headshot generated by AI (Bhaimiya, 2023). As she later reflected, “this has catalyzed a larger conversation around AI bias and who is or isn’t included in this new wave of technology” (Wang, as cited in Growcoot, 2023).
```

## Data

From [Kaggle](https://www.kaggle.com/datasets/umeradnaan/autism-screening)

-   **Numerical** (age, screener result)
-   **Categorical** (gender f/m, jaundice yes/no, family history of Autism yes/no, used app before yes/no, results from screener results YES (7+) NO (\~6), ethnicity, country of residence)

::: center
![](images/Autism_Spectrum_dataset.png){fig-align="center" width="60%"}
:::

```{r}
#I looked for dataset on Kaggle as recommended by Lina. There were a few Autism related datasets, and I chose this one based on the columns and the score for “ease of use”. I really had ethical dilemma, though, reducing complex lives of people down to just these columns. As an Autism consultant who spends 20+ hours to evaluate infants and toddlers for educational Autism eligibility, I really didn’t want to use the binary outcome of YES Autism or NO Autism based on an online screener of 10 questions, especially because it seemed like if you had a score of 7+, you were “yes Autism” group. So, I decided to use the total score of 0-10 as the numerical, continuous outcomes that i will try to predict. 
```

## Cleaning up missing data

```{r}
### Following the steps on Kaggle Assignment 1 ###
# Task 1.1. Read data 

autism <- read.csv('/Users/maiko/Desktop/EDLD654_ML/data/Autism_Screening.csv', header=TRUE)

# str(autism)
```

```{r}
### Assignment 1 ###
#Task 1.2. through Task 1.8. Recode cyclical data, text data – N/A
# Task 1.3. Recode text data into binary variable—> start here by recoding gender, jundice, autism, class/ASD as binary?
setwd("~/Desktop/EDLD654_ML")
```

```{r}
autism$gender_binary <- ifelse(autism$gender == "m", 1, 0)
autism$jundice_binary <- ifelse(autism$jundice == "yes", 1, 0)
autism$Class.ASD_binary <- ifelse(autism$Class.ASD == "YES", 1, 0)

# head(autism[c("gender", "gender_binary")])
# table(autism$gender_binary)
```

```{r}
### Assignment 1 ###
# Task 2.2 Using the ff_glimpse() function from the finalfit package, provide a snapshot of missingness in this dataset. This function also returns the number of levels for categorical variables. If there is any variable with large amount of missingness (e.g. more than 75%), remove this variable from the dataset.

# autism <- autism[, colMeans(is.na(autism)) <= 0.75]
# str(autism)
```

```{r}
#| echo: true 
#| fig-align: center
#| # #| output-location: makes the plot go next page, or column etc. 

ff_glimpse(autism[, 1:20])
```

## Cleaning up missing data

Because the dataset had "?" for missing data, I calculated the percentage of "?" values in the Ethnicity column.

```{r}
#| echo: true 
#| fig-align: center
sum(autism$ethnicity == "?", na.rm = TRUE)
nrow(autism)
mean(autism$ethnicity == "?", na.rm = TRUE) * 100
```

## Descriptive statistics

Autism Screener result

```{r}
autism <- autism %>%
  mutate(
    contry_of_res = str_trim(contry_of_res),
    contry_of_res = str_replace_all(contry_of_res, "^[\"']+|[\"']+$", ""),
    contry_of_res = str_squish(contry_of_res),
    contry_of_res = recode(contry_of_res,
      "USA" = "United States", "U.S." = "United States",
      "United States of America" = "United States"
    )
  )
```

```{r}
# Fixing the "ethnicity" column the same way as above to remove ' " etc.
autism <- autism %>%
  mutate(
    ethnicity = str_trim(ethnicity),
    ethnicity = str_replace_all(ethnicity, "^[\"']+|[\"']+$", ""),
    ethnicity = str_squish(ethnicity)
    )
```

```{r, echo=FALSE}
autism$age <- as.numeric(autism$age)
# sum(is.na(autism$age))
# is.numeric(autism$result)
```

```{r}
# summary(autism$age)
```

```{r}
#| echo: true 
#| fig-align: center

ggplot(autism, aes(x = Class.ASD, fill = Class.ASD)) +
  geom_bar() +
  scale_fill_manual(values = c("NO" = "#69b3a2", "YES" = "#404080")) +
  labs(title = "Autism Prevalence by Screener Result",
       x = NULL, y = NULL) +
  theme_minimal(base_size = 14) +
  theme(legend.position = "none",
        plot.title = element_text(hjust = 0.5))
```

## Descriptive statistics

Autism Screener user age

```{r}
#| echo: true 
#| fig-align: center
ggplot(autism, aes(x = age)) +
  geom_histogram(binwidth = 0.5) +
  scale_x_continuous(limits = c(0, max(autism$age, na.rm = TRUE) + 10)) +
  labs(title = "Age Distribution",
       x = "Age",
       y = "Count") +
  theme_minimal()

```

## Descriptive statistics

Autism Screener user age with `filter(age <= 100)`

```{r}
#| echo: true 
#| fig-align: center
autism <- autism %>% filter(age <= 100)

ggplot(autism, aes(x = age)) +
  geom_histogram(binwidth = 0.5, fill = "steelblue") +
  labs(title = "Age Distribution",
       x = "Age",
       y = "Count") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

```

```{r}
### Assignment 1 ### 
# Task 2.3 Most of the variables in this dataset are categorical, and particularly a binary variable with a Yes and No response. Check the frequency of unique values for all categorical variables. If there is any inconsistency (e.g., Yes is coded as both 'y' and 'Y') for any of these variables in terms of how values are coded, fix them. Also, check the distribution of numeric variables and make sure there is no anomaly.

# names(autism)
```

```{r}
# Categorical variables
cat_vars <- c(
  "gender", 
  "ethnicity", 
  "jundice",       # use your dataset’s spelling
  "austim",        # same spelling as in your data
  "contry_of_res", # same spelling as in your data
  "Class.ASD"
)

# Numeric variables
num_vars <- c(
  "age",
  "result"
)

# Binary-coded versions 
binary_vars <- c(
  "gender_binary",
  "jundice_binary",
  "Class.ASD_binary"
)
```

```{r}
list(
  categorical = cat_vars,
  numerical = num_vars,
  binary = binary_vars
)
```

```{r}
invisible(lapply(cat_vars, function(v) {
  cat("\n---", v, "---\n")
  print(table(autism[[v]], useNA = "ifany"))
}))

```

```{r}
summary(autism[num_vars])
```

```{r}
ggplot(autism, aes(x = ethnicity)) +
  geom_bar(fill = "steelblue") +
  geom_text(aes(label = after_stat(count)),
            stat = "count",
            vjust = -0.5, size = 3.5) +
  labs(title = "Race/Ethnicity",
       x = "Race/Ethnicity",
       y = "Count") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(angle = 45, hjust = 1))
```

## Model 1

"... all model building efforts are constrained by the existing data" (p. 61, Kuhn & Johnson, 2016).

```{r}

```

```{r}

```

```{r}

```

## Model 2

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Model 3

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Specific setting for model fitting

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Evaluating model performance

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Model fit - Model performance

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Model fit - Final model selection

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Model fit - Cut off point

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Model fit - Other considerations

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Data visualization 1

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Data visualization 2

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Discussion - What I learned

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Discussion - Variables

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Discussion - Findings

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Conclusion

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## References:

-   Allison, C., Auyeung, B., & Baron-Cohen, S. (2012). Toward brief “Red Flags” for Autism screening: The short Autism Spectrum Quotient and the short Quantitative Checklist in 1,000 cases and 3,000 controls. *Journal of the American Academy of Child & Adolescent Psychiatry*, *51*(2), 202-212.e7.
-   Growcoot, M. (2023, August 3). *Asian MIT student asks AI for a pro headshot, gets turned White.* PetaPixel. <https://petapixel.com/2023/08/03/asian-mit-student-asks-ai-for-a-pro-headshot-gets-turned-white/>
-   Kuhn, M. and Johnson, K. (2014). *Applied Predictive Modeling in R*. Springer.

## Thank you!

Please don’t hesitate to reach out via [LinkedIn page](https://www.linkedin.com/in/maikohata/) or [Email](mailto:hata@uoregon.edu), I would love to hear from you! I also invite you to [my website I created using Quarto](https://maihata.github.io/finalproj/) and take a look at [my professional history](#0).

::: {style="text-align: center;"}
Maiko Hata, University of Oregon
:::

![](images/Thank-You-in-Different-Languages.png){fig-align="center" width="60%"}
